#include<stdio.h>
#define MAX 4

int main()
 {
    int c,i;
    while(1){
    printf("1.insertion 2.deletion 3.check queue overflow condition  4.check queue underflow condition  5.peek  6.display  7.exit\nChoose operation to perform: ");
    scanf("%d", &c);
    switch(c) //menu driven structure to use queue
    {
     case 1:
            printf("Enter element to insert: ");
            scanf("%d", &i);
            enqueue (i);
            break;
    case 2:
            dequeue();
            break;
    case 3:
            overflow();
            break;
    case 4:
            underflow();
            break;
    case 5:
            peek();
            break;
    case 6:
            display();
            break;
    case 7:
            exit(1);
            break;
    default:
        printf("Invalid choice\n");
        break;
        }
    }
}

int front = -1, rear = -1, a[MAX], i;
void enqueue(int i) //function for enqueue operation
    {
    if(rear==MAX-1)
     {
    printf("queue overflow\n\n");
     }
    else
    {
		if(front==-1 && rear==-1)
		 {
    		front++;
    		rear++;
    	 }
    	else
    	{
   		rear++;
		}
		a[rear] = i;

    }
}

 int dequeue()
     {
      if(front == -1 ||front>rear)
        {
          printf("queue underflow\n\n");
        }
    else
    {
      i = a[front];
      front++;
      printf("Element deleted successfully\n\n");
      return front;
    }
}

  void overflow() //function to check overflow condition
 {
    if(rear == MAX -1)
     {
       printf("Queue overflow\n\n");
     }
    else
     {
    printf("No Queue overflow\n\n");
     }
}
void underflow() //function to check underflow condition
{
    if(front == -1 ||front>rear)
     {
    printf("Queue underflow\n\n");
     }
    else
    {
    printf("no Queue underflow\n\n");
    }
}
void peek()
{
     if(front == -1 ||front>rear)
    {
      printf("Queue underflow\n\n");
    }
    else
    {
      printf("front element is %d\n",a[front]);
    }
}
void display()
{
  int i;
    if(front == -1 ||front>rear)
     {
      printf("Queue underflow\n");
     }
    else
     {
        for(i=front ; i<=rear; i++)
        {
         printf("%d ", a[i]);
         printf("\n");
        }
    }
}
