#include<stdio.h>

void bubble(int arr[], int n)
{
int i,j,temp;
for (i=0; i<n-1; i++)
{
    for (j=0; j<n-1; j++)
    {
        if(arr[j]>arr[j+1])
        {
            int temp=arr[j];
            arr[j]=arr[j+1];
            arr[j+1]=temp;
        }
    }
}
}

int RBinarySearch(int arr[], int key,int low, int high)
{
int mid, index;

if(low>high)
{
    return -1;
}

mid=(low+high)/2;

if(key==arr[mid])
{
  return (mid);
}

else if(key<arr[mid]) //search in lower half
{
return RBinarySearch(arr, key, low, mid-1);
}

else
{
return RBinarySearch(arr, key, mid+1, high); //search in upper half
}

}

   int main()
  {
    int n,i,arr[50],key,index, low=0, high;
    printf("Enter the total no. of elements");
    scanf("%d",&n);

    high=n-1;

    printf("Elements are");
      for(i=0;i<n;i++)
    scanf("%d",&arr[i]);

  bubble(arr, n); //bubble sort function call
  printf("Sorted array: ");
  for (i = 0; i < n; i++)
    {
    printf("%d ", arr[i]);
  }

    printf("\nEnter the element that needs to be searched");
    scanf("%d",&key);

    index=RBinarySearch(arr,key,low,high); //recursive binary search function call

         if(index==-1)
    printf("Element %d not found",key);
    else
    printf("Element %d found at index %d",key,index);
  }

